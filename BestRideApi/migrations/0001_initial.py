# Generated by Django 4.2.2 on 2023-06-27 13:07

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'City',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('idCompany', models.AutoField(db_column='idCompany', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('rnat_license', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=15, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('nif', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(100000000), django.core.validators.MaxValueValidator(999999999)])),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('verification_code', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(7)])),
                ('recover_account_code', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(7)])),
            ],
            options={
                'db_table': 'Company',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('idDriver', models.AutoField(db_column='idDriver', primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=15, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('nif', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(100000000), django.core.validators.MaxValueValidator(999999999)])),
                ('rnat_license', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_license', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('nationality', models.CharField(blank=True, max_length=255, null=True)),
                ('citizen_card', models.CharField(blank=True, max_length=255, null=True)),
                ('ancat_number', models.CharField(blank=True, max_length=255, null=True)),
                ('iban', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_image', models.TextField(blank=True, null=True)),
                ('bi_image', models.TextField(blank=True, null=True)),
                ('special_need_suppport', models.CharField(blank=True, max_length=255, null=True)),
                ('languages', models.CharField(blank=True, max_length=255, null=True)),
                ('vehicles_can_drive', models.CharField(blank=True, max_length=255, null=True)),
                ('available_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('course_taken', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_type', models.CharField(blank=True, max_length=255, null=True)),
                ('type_guide', models.CharField(blank=True, max_length=255, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('video', models.TextField(blank=True, null=True)),
                ('start_activity', models.CharField(blank=True, max_length=10, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('verification_code', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(7)])),
                ('recover_account_code', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(7)])),
            ],
            options={
                'db_table': 'Driver',
            },
        ),
        migrations.CreateModel(
            name='EmergencyContactDriver',
            fields=[
                ('idEmergencyContactDrive', models.AutoField(db_column='idEmergencyContactDrive', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('relation', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'EmergencyContactDriver',
            },
        ),
        migrations.CreateModel(
            name='ItinearyRouteInterestPoints',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('itinearyroute_id', models.IntegerField()),
                ('pointinterest_id', models.IntegerField()),
            ],
            options={
                'db_table': 'itineary_route_interest_points',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('idPagamento', models.AutoField(db_column='idPagamento', primary_key=True, serialize=False)),
                ('modo_pagamento', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'Payment',
            },
        ),
        migrations.CreateModel(
            name='RoadMap',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('price', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.CharField(blank=True, max_length=322, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('location', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('arquivado', models.CharField(blank=True, max_length=100, null=True)),
                ('city_id', models.ForeignKey(db_column='city_id', on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.city')),
                ('driver', models.ForeignKey(db_column='driver', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.driver')),
                ('enterprise', models.ForeignKey(db_column='enterprise', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.company')),
            ],
            options={
                'db_table': 'road_map',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('idUser', models.AutoField(db_column='idUser', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('image', models.CharField(blank=True, max_length=4000, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=15, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('verification_code', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(7)])),
                ('recover_account_code', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(7)])),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('seats', models.IntegerField(db_column='seats')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.CharField(blank=True, max_length=4000, null=True)),
                ('registration', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('arquivado', models.CharField(blank=True, max_length=100, null=True)),
                ('driver', models.ForeignKey(db_column='driver', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.driver')),
                ('enterprise', models.ForeignKey(db_column='enterprise', on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.company')),
            ],
            options={
                'db_table': 'vehicle',
            },
        ),
        migrations.CreateModel(
            name='TravelSchedule',
            fields=[
                ('idAgendaViagem', models.AutoField(db_column='idAgendaViagem', primary_key=True, serialize=False)),
                ('dataAgenda', models.DateField()),
                ('driver_id', models.ForeignKey(db_column='driver_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='driver_id', to=settings.AUTH_USER_MODEL)),
                ('road_map_id', models.ForeignKey(db_column='road_map_id', on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.roadmap')),
                ('turist_id', models.ForeignKey(db_column='turist_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='turist_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'TravelSchedule',
            },
        ),
        migrations.CreateModel(
            name='Travel',
            fields=[
                ('idViagem', models.AutoField(db_column='idViagem', primary_key=True, serialize=False)),
                ('Pagamento_idPagamento', models.ForeignKey(db_column='Pagamento_idPagamento', on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.payment')),
                ('driver_id', models.ForeignKey(db_column='driver_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='driverID', to='BestRideApi.driver')),
                ('road_map_id', models.ForeignKey(db_column='road_map_id', on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.roadmap')),
                ('turist_id', models.ForeignKey(db_column='turist_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='turistID', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Travel',
            },
        ),
        migrations.CreateModel(
            name='PointInterest',
            fields=[
                ('idpercurso', models.AutoField(db_column='idPercurso', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=45, null=True)),
                ('location', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('image', models.CharField(blank=True, max_length=322, null=True)),
                ('roadMap', models.ForeignKey(blank=True, db_column='roadMap_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roadMap', to='BestRideApi.roadmap')),
            ],
            options={
                'db_table': 'Point_Interest',
            },
        ),
        migrations.CreateModel(
            name='FKDriverEnterprise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('Driver', models.ForeignKey(db_column='driver', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.driver')),
                ('Enterprise', models.ForeignKey(db_column='enterprise', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.company')),
            ],
            options={
                'db_table': 'FKDriverEnterprise',
            },
        ),
        migrations.AddField(
            model_name='driver',
            name='emergency_contact_id',
            field=models.ForeignKey(db_column='emergencyContact_id', on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.emergencycontactdriver'),
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('idComment', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('comment', models.CharField(blank=True, db_column='comment', max_length=350, null=True)),
                ('pontuation', models.IntegerField(db_column='pontuation')),
                ('username', models.CharField(blank=True, db_column='username', max_length=350, null=True)),
                ('road_map', models.ForeignKey(db_column='id_road_map', on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.roadmap')),
            ],
            options={
                'db_table': 'comments',
            },
        ),
        migrations.CreateModel(
            name='RoadVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('road_map', models.ForeignKey(db_column='road_map', on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.roadmap')),
                ('vehicle', models.ForeignKey(db_column='vehicle', on_delete=django.db.models.deletion.DO_NOTHING, to='BestRideApi.vehicle')),
            ],
            options={
                'db_table': 'road_vehicle',
                'unique_together': {('road_map', 'vehicle')},
            },
        ),
    ]
